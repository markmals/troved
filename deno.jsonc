{
    "$schema": "https://raw.githubusercontent.com/denoland/deno/refs/heads/main/cli/schemas/config-file.v1.json",
    "nodeModulesDir": "auto",
    "unstable": ["sloppy-imports"],
    "tasks": {
        "dev": {
            "command": "deno run -A npm:vite dev --host",
            // Bootstrap the database every time we run the dev server
            "dependencies": ["db-bootstrap"]
        },
        "build": "deno run -A npm:vite build",
        "serve": {
            "command": "deno run -A ./src/scripts/serve.ts",
            "dependencies": ["build"]
        },

        "db-bootstrap": {
            "command": "deno task db-push",
            "dependencies": ["db-clean"]
        },
        "db-clean": "deno run -A ./src/scripts/db-bootstrap.ts",
        "db-push": "deno run -A ./src/scripts/db-push.ts",
        "db-generate": "deno run -A ./src/scripts/db-generate.ts",

        "test": "deno run -A npm:vitest run",

        "generate-tmdb": "deno run -A ./src/scripts/generate-tmdb-api.ts",
        "generate-trakt": "deno run -A ./src/scripts/generate-trakt-api.ts",
        "generate": {
            "dependencies": ["generate-tmdb", "generate-trakt"]
        },

        "fmt": "deno fmt .",
        "lint": "deno run -A npm:@biomejs/biome@^2.0.0-beta.6 check --write --unsafe --assist-enabled=true .",
        "check": {
            "dependencies": ["fmt", "lint"]
        },

        "typegen": "deno run -A npm:@react-router/dev typegen",
        "typecheck": {
            "command": "deno check src",
            "dependencies": ["typegen"]
        }
    },
    "imports": {
        "~/": "./src/app/",
        "$api/": "./src/api/",
        "$db/": "./src/database/",

        "@biomejs/biome": "npm:@biomejs/biome@^2.0.0-beta.6",
        "@cliffy/command": "jsr:@cliffy/command@^1.0.0-rc.7",
        "@deno/vite-plugin": "npm:@deno/vite-plugin@^1.0.4",
        "@hono/zod-openapi": "npm:@hono/zod-openapi@^0.18.3",
        "@mizchi/drizzle-orm": "npm:@mizchi/drizzle-orm@^0.41.1",
        "@radix-ui/react-slot": "npm:@radix-ui/react-slot@^1.2.3",
        "@react-router/dev": "npm:@react-router/dev@7.6.2",
        "@react-router/fs-routes": "npm:@react-router/fs-routes@^7.6.2",
        "@react-router/serve": "npm:@react-router/serve@7.6.2",
        "@std/assert": "jsr:@std/assert@^1.0.12",
        // "@std/cli": "jsr:@std/cli@^1.0.16",
        "@std/fs": "jsr:@std/fs@^1.0.18",
        "@std/http": "jsr:@std/http@^1.0.14",
        "@std/jsonc": "jsr:@std/jsonc@^1.0.2",
        "@std/path": "jsr:@std/path@^1.0.8",
        "@tailwindcss/vite": "npm:@tailwindcss/vite@^4.1.3",
        "@types/react": "npm:@types/react@^19.1.0",
        "@types/react-dom": "npm:@types/react-dom@^19.1.0",
        "apib2swagger": "npm:apib2swagger@^1.17.1",
        "class-variance-authority": "npm:class-variance-authority@^0.7.1",
        "clsx": "npm:clsx@^2.1.1",
        "downpour": "npm:downpour@^0.1.1",
        "execa": "npm:execa@^9.5.2",
        "hono": "npm:hono@^4.7.6",
        "isbot": "npm:isbot@^5",
        "ofetch": "npm:ofetch@^1.4.1",
        "openapi-fetch": "npm:openapi-fetch@^0.13.3",
        "openapi-typescript": "npm:openapi-typescript@^7.4.4",
        "progress": "npm:progress@^2.0.3",
        "react": "npm:react@^19.1.0",
        "react-dom": "npm:react-dom@^19.1.0",
        "react-router": "npm:react-router@^7.6.2",
        "tailwind-merge": "npm:tailwind-merge@^3.3.0",
        "tailwindcss": "npm:tailwindcss@^4.1.3",
        "tailwindcss-animate": "npm:tailwindcss-animate@^1.0.7",
        "vitest": "npm:vitest@^3.2.2",
        "type-fest": "npm:type-fest@^4.30.2",
        "vite": "npm:vite@^6.2.6",
        "zod": "npm:zod@^3.25.56"
    },
    "compilerOptions": {
        "strict": true,
        "lib": ["Deno.NS", "DOM", "DOM.Iterable", "ESNext"],
        "jsx": "react-jsx",
        "jsxImportSource": "react",
        "types": ["vite/client"],
        "rootDirs": [".", "./.react-router/types"],
        "checkJs": true,
        "verbatimModuleSyntax": true
    },
    "fmt": {
        "indentWidth": 4,
        "lineWidth": 100,
        "singleQuote": false,
        "proseWrap": "never",
        "exclude": ["./.react-router/**"]
    },
    // Disable Deno Lint; use Biome instead
    "lint": { "exclude": ["./"] }
}
