---
description: 
globs: 
alwaysApply: true
---
# Deno 2.x - Cursor Rules

## Environment Setup
- Always use Deno 2.x features and APIs
- Use deno.json/deno.jsonc for project configuration
- Never use or create package.json nor tsconfig.json
- Prefer Deno's built-in tools and packages over npm packages when available
- Use the `imports` files in deno.json for dependency management
- Always use explicit file extensions in imports (.ts, .tsx)

## Testing Requirements
- Run `deno task test` for unit tests
- Use Deno's built-in testing framework (Deno.test) for code that doesn't need to be run through the Vite plugin pipeline
- Use Vitest for code that needs to be run through the Vite plugin pipeline, for example React, Solid.js, Astro, or Svelte code
- For JavaScript framework components, use Testing Library (@testing-library/*)
- Ensure all new features include corresponding unit tests
- Mock external APIs

## Code Quality Checks
- Format code with `deno task check` before committing
- Run `deno task check` and fix all info, warnings, and errors
- Type-check with `deno task typecheck`
- Prefer `unknown` over `any` unless absolutely necessary
- Use JSDoc/TSDoc comments for public APIs
- Document important lines of code with a single line comment

## Common Commands
- Dev server: `deno task dev`
- Build: `deno task build`
- Test: `deno task test`
- Type check: `deno task typecheck`
- Lint: `deno task check`

## Import Guidelines
- Use bare specifiers with import map for external deps
- Prefer `jsr:@std/*` for standard library
- Use relative imports for local modules
- Prefer import aliases over relative imports for local modules
- Always include file extensions

## Security Best Practices
- Explicitly specify Deno permissions in scripts
- Never use --allow-all (-A) in production for user scripts (only for npm/jsr packages)
- Validate environment variables at startup using `@std/assert`

## Debugging Approach
- Use console.log with clear prefixes during development
- Check Deno permissions first when encountering errors
- Verify deno.json `imports` configuration for dependency issues